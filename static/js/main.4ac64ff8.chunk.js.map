{"version":3,"sources":["components/navbar.jsx","components/counter.js","components/counters.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","totalCounters","className","href","algin","Counter","makeStyles","theme","root","padding","spacing","align","src","this","getphone","alt","height","width","Paper","elevation","Typography","props","counter","info","getBadgeClasses","formatCount","onClick","onIncrement","onDecrement","phone","classes","value","Component","Counters","onDelete","onReset","counters","map","key","id","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleReset","c","handleDelete","counterId","filter","Fragment","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ac64ff8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst NavBar = ({totalCounters}) => {\r\n\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar sticky-top navbar-expand-lg navbar-light bg-light\">\r\n            \r\n          <div className=\"container\" >\r\n            <a className=\"navbar-brand\" href=\"#\" algin ='left'>\r\n              Cart{\" \"}\r\n              <span className=\"badge badge-pill badge-secondary\">\r\n                {totalCounters}\r\n              </span>\r\n\r\n            </a>\r\n          </div>\r\n          \r\n        </nav>\r\n      );\r\n}\r\n \r\nexport default NavBar;\r\n\r\n// class NavBar extends Component {\r\n//   render() {\r\n    \r\n//   }\r\n// }\r\n\r\n// export default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n}));\r\n\r\n\r\nclass Counter extends Component {\r\n  // state = {\r\n  //   value: this.props.counter.value\r\n  // };\r\n\r\n  /*renderTags() {\r\n    if (this.state.tags.length === 0) return <p>There are no Tags!</p>\r\n\r\n    return ( \r\n    <ul>\r\n      {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}\r\n    </ul>);\r\n  }*/\r\n\r\n  // constructor(){\r\n  //   super();\r\n  //   this.handleIncrement = this.handleIncrement.bind(this);\r\n  // }\r\n\r\n  // handleIncrement = () => {\r\n  //   //console.log(\"Increment Clicked\",this);\r\n  //   //console.log();\r\n  //   this.setState({ value: this.state.value + 1 });\r\n\r\n  // };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div align=\"center\">\r\n            <img\r\n              src={this.getphone()}\r\n              alt=\"Iphone\"\r\n              height=\"400\"\r\n              width=\"500\"\r\n            ></img>\r\n          </div>\r\n          <div >\r\n            <Paper elevation={3} >\r\n              <Typography align = \"center\">{this.props.counter.info}</Typography>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Add to Cart\r\n        </button>\r\n        <button\r\n          onClick={() => this.props.onDecrement(this.props.counter)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Remove from Cart\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  getphone() {\r\n    return this.props.counter.phone;\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.props.counter.value <= 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value <= 0 ? \"Zero\" : value;\r\n  }\r\n  notNegative() {\r\n    const { value } = this.props.counter;\r\n    return value <= 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n  \r\n  render() {\r\n\r\n    const { onReset,onDelete,onIncrement,counters ,onDecrement} = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        {/* <button\r\n          onClick={onReset}\r\n          className=\"btn btn-primary btn-sm m-2\"\r\n        >\r\n          Reset\r\n        </button> */}\r\n\r\n        {counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            onDecrement={onDecrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","//import React from \"react\";\nimport React, { Component } from 'react';\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport Paper from '@material-ui/core/Paper';\n\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0, phone :  \"https://www.gizmochina.com/wp-content/uploads/2019/03/motorola-razr-2019-1-500x500.jpg\",info: \" Motorola Razr (2019) smartphone was launched on 13th November 2019. ... Motorola Razr (2019) is powered by a 2.2GHz octa-core Qualcomm Snapdragon 710 processor. It comes with 6GB of RAM. The Motorola Razr (2019) runs Android 9.0 Pie and is powered by a 2510mAh non-removable battery.\"},\n      { id: 2, value: 0 ,phone : \"https://images.macrumors.com/article-new/2017/09/iphonexdesign.jpg\",info : \"The iPhone 11 is available in six colors: black, white, red, purple, green, and yellow. The iPhone 11 also features a new anodized aluminum finish, which Apple says is more durable. There's also Dolby Vision audio. It's powered by Apple's new A13 Bionic chip, which Apple touts as its faster processor ever.\" },\n      { id: 3, value: 0 ,phone : \"https://i.gadgets360cdn.com/products/large/1556860999_635_google_pixel_3a.jpg?downsize=*:180&output-quality=80\",info : \"Google Pixel smartphone. The Google Pixel is a smartphone that was tested with the Android 7.1 operating system. This model weighs 5 ounces, has a 5 inch touch screen display, 12.3-megapixel main camera, and 8-megapixel selfie camera. It comes with 4GB of RAM\"}\n    ]\n  };\n  handleIncrement = counter => {\n    // console.log(counter);\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  handleDecrement = counter => {\n    // console.log(counter);\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    if(counters[index].value<0)\n    counters[index].value = 0;\n    else\n    counters[index].value--;\n\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = counterId => {\n    //console.log(\"Delete\", counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n        <main className=\"container\">\n         \n          <Counters\n          counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n            onDecrement={this.handleDecrement}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Counters from './components/counters'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}